# Generated by Django 3.2.19 on 2023-08-25 22:07

import django.contrib.postgres.fields
from django.db import migrations, models
import notifications.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SubTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SubTaskItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=100)),
                ('done', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('subscribers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, size=None)),
                ('task_name', models.CharField(max_length=100)),
                ('task_date', models.DateField()),
                ('task_description', models.TextField(max_length=300)),
                ('task_category', models.CharField(max_length=100)),
                ('task_users_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, size=None)),
                ('task_priority', models.CharField(max_length=100)),
                ('task_status', models.CharField(max_length=100)),
                ('task_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('sub_tasks', models.ManyToManyField(blank=True, null=True, to='task.SubTask')),
            ],
            bases=(models.Model, notifications.models.Publisher),
        ),
        migrations.AddField(
            model_name='subtask',
            name='item',
            field=models.ManyToManyField(blank=True, to='task.SubTaskItem'),
        ),
    ]
